<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        r/f/h5VPHJQ9ZKEAAAAASUVORK5CYII=
</value>
  </data>
</root>